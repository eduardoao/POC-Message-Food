// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POC.Adapters.MySqlDataAccess.Context;

namespace POC.Adapters.MySqlDataAccess.Migrations
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20211222204041_AddAreas")]
    partial class AddAreas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("POC.Modules.Domain.Entities.Address", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("Complement")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("POC.Modules.Domain.Entities.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Phone")
                        .HasColumnName("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("POC.Modules.Domain.Entities.Delivery", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EstimatedDeliveryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Deliverys");
                });

            modelBuilder.Entity("POC.Modules.Domain.Entities.Order", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("POC.Modules.Domain.Entities.OrderItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("EAreas")
                        .HasColumnType("int");

                    b.Property<string>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("POC.Modules.Domain.Entities.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("POC.Modules.Domain.Entities.Address", b =>
                {
                    b.HasOne("POC.Modules.Domain.Entities.Customer", null)
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("POC.Modules.Domain.Entities.Customer", b =>
                {
                    b.OwnsOne("POC.Modules.Domain.ValueObjects.CpfVo", "Cpf", b1 =>
                        {
                            b1.Property<string>("CustomerId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Number")
                                .HasColumnName("Number")
                                .HasColumnType("text");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Cpfs");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("POC.Modules.Domain.ValueObjects.EmailVo", "Email", b1 =>
                        {
                            b1.Property<string>("CustomerId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Address")
                                .HasColumnName("Address")
                                .HasColumnType("text");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Emails");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("POC.Modules.Domain.ValueObjects.NameVo", "Name", b1 =>
                        {
                            b1.Property<string>("CustomerId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("FirstName")
                                .HasColumnName("FirstName")
                                .HasColumnType("text");

                            b1.Property<string>("LastName")
                                .HasColumnName("LastName")
                                .HasColumnType("text");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Names");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });
                });

            modelBuilder.Entity("POC.Modules.Domain.Entities.Delivery", b =>
                {
                    b.HasOne("POC.Modules.Domain.Entities.Order", null)
                        .WithMany("Deliveries")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("POC.Modules.Domain.Entities.Order", b =>
                {
                    b.HasOne("POC.Modules.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("POC.Modules.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("POC.Modules.Domain.Entities.Order", null)
                        .WithMany("Itens")
                        .HasForeignKey("OrderId");

                    b.HasOne("POC.Modules.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
